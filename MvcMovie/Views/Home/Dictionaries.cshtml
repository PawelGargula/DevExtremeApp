@{
    ViewData["Title"] = "Home Page";
}

@{
    bool hasPermision = false;
}

<link rel="stylesheet" href="~/css/dictionaries.css" />
<script defer src="~/js/dictionaries.js"></script>

<h1>Dictionaries</h1>

<div class="dictionary-definition-view">
    @(Html.DevExtreme().DataGrid<DictionaryDefinition>()
        .ID("dictionary-definition-grid")
        .Columns(columns =>
        {
            columns.AddFor(m => m.Code)
                .Visible(false);
            columns.AddFor(m => m.IsSystemic)
                .Visible(false)
                .GroupIndex(0)
                .GroupCellTemplate(@<text>
                    <% if(value) %>
                    <span>Systemowe</span>
                    <% else %>
                    <span>Własne</span>
                </text>)
                .SortOrder(SortOrder.Desc);
            columns.AddFor(m => m.Name);
            columns.Add()
                .Type(GridCommandColumnType.Buttons)
                .Buttons(b =>
                {
                    b.Add()
                        .Hint("Zobacz pozycje słownikowe")
                        .Visible(true)
                        .Template(@<text>
                            <a 
                                class="dx-link dx-icon-bulletlist custom-dx-button" 
                                data-id="<%- data.Id %>" 
                                href="<%- window.location.origin %>/Movies/Edit/<%- data.Id %>">
                            </a>
                        </text>);
                    b.Add().Name(GridColumnButtonName.Edit).Visible(new JS("isEditButtonVisible"));
                    b.Add().Name(GridColumnButtonName.Delete).Visible(new JS("isDeleteButtonVisible"));
                });
        })
        .DataSource(ds => ds.Mvc()
            .Controller("DictionaryDefinitions")
            .LoadAction("Get")
            .InsertAction("Post")
            .UpdateAction("Put")
            .DeleteAction("Delete")
            .Key("Id")
        )
        .Editing(e => e
            .Mode(GridEditMode.Popup)
            .AllowUpdating(true)
            .AllowAdding(true)
            .AllowDeleting(true)
            .Form(f => f.ColCount(3).Items(items =>
            {
                items.AddSimpleFor(m => m.Code);
                items.AddSimpleFor(m => m.Name).ColSpan(2);
            }))
            .Popup(p => p
                .Title("Dane słownika")
                .ShowTitle(true)
                .Width("70vw")
                .Height(250))
            .Texts(t =>
            {
                t.AddRow("Dodaj nowy");
                t.CancelRowChanges("Anuluj");
                t.ConfirmDeleteMessage("Czy na pewno chcesz usunąć słownik?");
                t.ConfirmDeleteTitle("Usuwanie słownika");
                t.SaveRowChanges("Zapisz");
                t.DeleteRow("Usuń słownik");
                t.EditRow("Edytuj słownik");
            })
            .UseIcons(true)
        )
        .FocusStateEnabled(true)
        .HoverStateEnabled(true)
        .OnRowInserted("onRowInserted")
        .OnRowUpdated("onRowUpdated")
        .OnRowRemoved("onRowRemoved")
        .Paging(p => p.Enabled(false))
        .SearchPanel(sp =>
        {
            sp.Visible(true);
            sp.Placeholder("Szukaj słownika...");
        })
        .ShowColumnHeaders(false)
        .ShowRowLines(true)
        .Toolbar(tb =>
        {
            tb.Items(i =>
            {
                i.Add()
                    .Name(DataGridToolbarItem.SearchPanel);
                i.Add()
                    .CssClass("add-new-button")
                    .Name(DataGridToolbarItem.AddRowButton)
                    .ShowText(ToolbarItemShowTextMode.Always);
            });
        })
        .WordWrapEnabled(true)
    )
</div>