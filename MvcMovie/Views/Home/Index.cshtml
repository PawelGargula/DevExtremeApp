@{
    ViewData["Title"] = "Home Page";
}

@{
    bool hasPermision = true;
}

@using (Html.BeginForm("Create", "Person", FormMethod.Post)) 
{
    @(Html.DevExtreme().Form<Person>()
        .Items(items =>
        {
            items.AddGroup()
                .Caption("Person data")
                .ColCount(2)
                .Items(groupItems =>
                {
                    groupItems.AddSimpleFor(m => m.FirstName);
                    groupItems.AddSimpleFor(m => m.BirthDate);
                    groupItems.AddSimpleFor(m => m.Email);
                    groupItems.AddSimpleFor(m => m.Localization)
                        .Editor(e => e
                            .DropDownBox()
                            .ContentTemplate(@<text> 
                                @*Set same unique parameter as on OnValueChanged > treelistBox_valueChanged function*@
                                @await Html.PartialAsync("_TreeList", "TreeListLOK")
                            </text>)
                            .OnValueChanged(@<text>
                                @*Set same unique parameter as on ContentTemplate > partialAsync*@
                                function(e) {
                                    treelistBox_valueChanged(e, "TreeListLOK");
                                }
                            </text>)
                            .ElementAttr(new JS("{ class: 'dropdown-box-with-treelist' }"))
                            .DataSource(d => d.Mvc()
                                .Controller("DictionaryDE")
                                .LoadAction("Get")
                                .Key("Id")
                                @*.LoadParams("123")*@ // Unique
                            )
                            .Disabled(!hasPermision)
                            .DisplayExpr(new JS("dictionaryExpr"))
                            .DropDownOptions(o => o.Height(350))
                            .Placeholder("Wybierz pozycję słownikową...")
                            .ShowClearButton(true)
                            .ValueExpr("Id")
                        );
                    groupItems.AddSimpleFor(m => m.Organization)
                        .Editor(e => e
                            .DropDownBox()
                            .ContentTemplate(@<text> 
                                @*Set same unique parameter as on OnValueChanged > treelistBox_valueChanged function*@
                                @await Html.PartialAsync("_TreeList", "TreeListORG")
                            </text>)
                            .OnValueChanged(@<text>
                                @*Set same unique parameter as on ContentTemplate > partialAsync*@
                                function(e) {
                                    treelistBox_valueChanged(e, "TreeListORG");
                                }
                            </text>)
                            .ElementAttr(new JS("{ class: 'dropdown-box-with-treelist' }"))
                            .DataSource(d => d.Mvc()
                                .Controller("DictionaryDE")
                                .LoadAction("Get")
                                .Key("Id")
                                @*.LoadParams("123")*@ // Unique
                            )
                            .Disabled(!hasPermision)
                            .DisplayExpr(new JS("dictionaryExpr"))
                            .DropDownOptions(o => o.Height(350))
                            .Placeholder("Wybierz pozycję słownikową...")
                            .ShowClearButton(true)
                            .ValueExpr("Id")
                        );
                });
            items.AddButton()
                .ButtonOptions(bo => bo
                    .Text("Create person")
                    .Type(ButtonType.Success)
                    .UseSubmitBehavior(true)
                );
        })
        .OnContentReady("focusFirstNameInput")
    )
}

<script>
    function treelistBox_valueChanged(e, treeListId) {
        const $treeList = $(`#${treeListId}`);
        if ($treeList.length) {
            const treeList = $treeList.dxTreeList("instance");
            console.log(treeList);
            treeList.selectRows(e.value, false);
        }
    }

    function focusFirstNameInput() {
        const firstNameInput = document.querySelector('[name="FirstName"]');
        firstNameInput.focus();     
    }

    function dictionaryExpr(dictionary) {
        return `${dictionary.Code} - ${dictionary.Name}`;
    }
</script>